(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{482:function(t,s,a){"use strict";a.r(s);var e=a(2),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"搭建个人博客网站"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搭建个人博客网站"}},[t._v("#")]),t._v(" 搭建个人博客网站")]),t._v(" "),s("p",[t._v("使用VuePress+GithubPage")]),t._v(" "),s("h1",{attrs:{id:"环境准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[t._v("#")]),t._v(" 环境准备")]),t._v(" "),s("ol",[s("li",[t._v("Node")]),t._v(" "),s("li",[t._v("Chrome浏览器或FireFox浏览器")]),t._v(" "),s("li",[t._v("一台电脑（Windows）")])]),t._v(" "),s("h1",{attrs:{id:"本地搭建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地搭建"}},[t._v("#")]),t._v(" 本地搭建")]),t._v(" "),s("ol",[s("li",[t._v("创建并进入一个新目录")])]),t._v(" "),s("p",[t._v("​\t\t在命令行中创建并进入新目录 "),s("code",[t._v("vuepress-starter")]),t._v("（可以自定义名字）：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" vuepress-starter\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("使用npm（node包管理器）进行初始化（-y可以自动确认问题）")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" init  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("将 VuePress 安装为本地依赖")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-D")]),t._v(" vuepress\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[s("p",[t._v("创建你的第一篇文档")]),t._v(" "),s("p",[t._v("VuePress 会以 docs 为文档根目录，所以README.md 相当于主页：")])])]),t._v(" "),s("p",[t._v("​\t\t创建 "),s("code",[t._v("docs")]),t._v(" 目录，并在其中创建 "),s("code",[t._v("README.md")]),t._v(" 文件作为首页内容：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" docs\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'# Hello VuePress'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" docs/README.md\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("修改 package.json 文件，添加一些启动命令：")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"docs:dev"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vuepress dev docs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"docs:build"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vuepress build docs"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("这样做的好处是你可以通过简单的命令来运行开发服务器或构建生产版本的静态文件，比如：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("启动本地开发服务器："),s("code",[t._v("npm run docs:dev")])])]),t._v(" "),s("li",[s("p",[t._v("构建用于部署的静态文件："),s("code",[t._v("npm run docs:build")])])])])])]),t._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[t._v("测试本地环境")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run docs:dev\n")])])]),s("ol",{attrs:{start:"7"}},[s("li",[t._v("运行编译成功后，会有提示：")])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://stofu80ry.sabkt.gdipper.com/picture/image-20250116215750272.png",alt:"image-20250116215750272"}})]),t._v(" "),s("ol",{attrs:{start:"8"}},[s("li",[t._v("在浏览器打开这个shell窗口中的网址 "),s("code",[t._v("http://localhost:8081")]),t._v("（默认端口是8080，可能我的端口被占用了），可以看到如下内容：")])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://stofu80ry.sabkt.gdipper.com/picture/image-20250116220142153.png",alt:"image-20250116220142153"}})]),t._v(" "),s("h1",{attrs:{id:"优化页面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化页面"}},[t._v("#")]),t._v(" 优化页面")]),t._v(" "),s("h1",{attrs:{id:"静态资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态资源"}},[t._v("#")]),t._v(" 静态资源")]),t._v(" "),s("p",[t._v("有时候，一些图片是经常被用到的，我们可以将其放到一个公共文件夹里，这样就可以在不同的博客里都引用到了。")]),t._v(" "),s("p",[t._v("我们在 .vuepress 目录下新建 public 目录，然后放一个图片，例如 amiliya.jpg。此时文件夹目录结构如下：")]),t._v(" "),s("h1",{attrs:{id:"同步github和gitee"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步github和gitee"}},[t._v("#")]),t._v(" 同步GitHub和Gitee")]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/236",target:"_blank",rel:"noopener noreferrer"}},[t._v("一篇教你代码同步 Github 和 Gitee"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("我们成功的用 VuePress 搭建了博客并部署到 Github Pages，但由于 Github 的访问问题，我们可以选择把仓库部署到 Gitee 一份，利用 Gitee 的 Pages 服务再生成一份静态网站用于备用，也可以作为一个备份")]),t._v(" "),s("h2",{attrs:{id:"_1-手动同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-手动同步"}},[t._v("#")]),t._v(" 1. 手动同步")]),t._v(" "),s("p",[t._v("在 Gitee 绑定 Github 账号后，选择仓库导入：")]),t._v(" "),s("p",[t._v("在 Gitee 的项目主页，提供了同步的按钮，你只用点一下，即可与 Github 同步更新，但是注意这里的同步功能默认是强制同步。")]),t._v(" "),s("h2",{attrs:{id:"_2-推送两个仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-推送两个仓库"}},[t._v("#")]),t._v(" 2. 推送两个仓库")]),t._v(" "),s("p",[t._v("除此之外，我们也可以在 sh 脚本文件里，直接推送到两个仓库地址上，具体操作参考"),s("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/236",target:"_blank",rel:"noopener noreferrer"}},[t._v("《一篇教你代码同步 Github 和 Gitee》"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"_3-github-actions-自动同步-推荐使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-github-actions-自动同步-推荐使用"}},[t._v("#")]),t._v(" 3. Github Actions 自动同步（推荐使用）")]),t._v(" "),s("p",[t._v("我们也可以利用 Github Actions，写一个工作流，在发现 Github 博客仓库的 gh-pages 分支代码更新后，自动同步当前代码到 Gitee 上。")]),t._v(" "),s("p",[t._v("关于 Github Actions 的介绍，可以参考阮一峰老师的 "),s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《GitHub Actions 入门教程》"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("还有几个问题要注意：")]),t._v(" "),s("ol",[s("li",[t._v("因为我们是提交到 Github 的 gh-pages 分支上，这个文件和目录需要写在 gh-pages 分支")]),t._v(" "),s("li",[t._v("观察我们的脚本代码，我们就会发现，每次我们 "),s("code",[t._v("sh deploy.sh")]),t._v(" 的时候，都是编译代码到 dist 目录，然后重新 git init ，最后强制提交。所以我们在项目的根目录建立 "),s("code",[t._v(".github/woorkflows/syncToGitee.yml")]),t._v(" 并没有什么用，一来提交的是 dist 目录里的代码，二是每次还都会清空重新编译生成代码提交。")])]),t._v(" "),s("p",[t._v("为此，我们可以在脚本里添加代码，每次编译完后，再拷贝外层的 "),s("code",[t._v(".github/woorkflows/syncToGitee.yml")]),t._v(" 到 dist 目录里，再提交到 Github 上。")]),t._v(" "),s("p",[t._v("所以我们依然在项目根目录添加目录和文件，此时的文件结构如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\n├─ docs\n│  ├─ README.md\n│  └─ .vuepress\n│     └─ config.js\n└─ .github\n│  └─ workflows\n│\t\t\t└─ syncToGitee.yml\n└─ package.json\n└─ deploy.sh\n")])])]),s("p",[t._v("脚本文件"),s("code",[t._v("deploy.sh")]),t._v("代码如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#!/usr/bin/env sh\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpm run docs:build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\n###添加###\n# 拷贝目录和文件\ncp -r ../../../.github ./\n\ngit init\ngit add -A\ngit commit -m 'deploy'\n\n# 如果发布到 https://<USERNAME>.github.io/<REPO>\ngit push -f git@github.com:rc4gyyc/cyanyep.git master:unf-pages\n\ncd -\n")])])]),s("p",[t._v("此时我们再运行 "),s("code",[t._v("sh deploy.sh")]),t._v(" 代码提交到 Github，就可以在仓库的 Actions 中看到运行记录：")]),t._v(" "),s("h1",{attrs:{id:"图床"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图床"}},[t._v("#")]),t._v(" 图床")]),t._v(" "),s("p",[t._v("在七牛云中新建存储对象")]),t._v(" "),s("p",[t._v("新建空间")]),t._v(" "),s("h2",{attrs:{id:"图片上传工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片上传工具"}},[t._v("#")]),t._v(" 图片上传工具")]),t._v(" "),s("p",[t._v("我的博客是基于 Markdown 的，如果我们每次上传图片都需要登录到七牛云控制台并上传，就太慢了。因此市面上出现了很多图片上传工具，能实现的效果是这样的：将图片拖拽到工具里，就能自动上传到对象存储里，并且获取图片链接，极大简化了我们的操作。")]),t._v(" "),s("p",[t._v("目前常见的工具有：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://molunerfinn.com/PicGo/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PicGo "),s("OutboundLink")],1),t._v("：支持 Windows，Mac 和 Linux，基于 Electron 开发，支持多种图床上传")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.bilibili.com/video/BV1S64y1G76f/",target:"_blank",rel:"noopener noreferrer"}},[t._v("将工具注册到右键中"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);